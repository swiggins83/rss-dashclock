package com.swiggins.rssfordashclock;

import android.os.Bundle;

import android.content.SharedPreferences;
import android.preference.PreferenceActivity;
import android.preference.CheckBoxPreference;
import android.preference.ListPreference;


import android.content.SharedPreferences.OnSharedPreferenceChangeListener;

public class RssDashClockSettingsActivity extends PreferenceActivity implements
        OnSharedPreferenceChangeListener {

    public static final String PREF_UPDATE_ON_APPEARANCE = "pref_update_on_appearance";
    public static final String PREF_SYNC_FREQUENCY = "pref_sync_frequency";
    private CheckBoxPreference mCheckBoxPreference;
    private ListPreference mListPreference;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        // Load the XML preferences file
        addPreferencesFromResource(R.xml.pref_example);
        // Get a reference to the preferences
        mCheckBoxPreference = (CheckBoxPreference) getPreferenceScreen().findPreference(RssDashClockService.PREF_UPDATE_ON_APPEARANCE);
        mListPreference = (ListPreference) getPreferenceScreen().findPreference(RssDashClockService.PREF_SYNC_FREQUENCY);
    }

    @Override
    protected void onResume() {
        super.onResume();
        // Setup the initial values
        mCheckBoxPreference.setSummary(getSharedPreferences().getBoolean(PREF_UPDATE_ON_APPEARANCE, false) ? "Disable this setting" : "Enable this setting");
        mListPreference.setSummary("Current value is " + getSharedPreferences().getValue(PREF_SYNC_FREQUENCY, ""));
        // Set up a listener whenever a key changes
        getPreferenceScreen().getSharedPreferences().registerOnSharedPreferenceChangeListener(this);
    }

    @Override
    protected void onPause() {
        super.onPause();
        // Unregister the listener whenever a key changes
        getPreferenceScreen().getSharedPreferences()
                .unregisterOnSharedPreferenceChangeListener(this);
    }

    public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
        // Let's do something a preference value changes
        if (key.equals(RssDashClockService.PREF_UPDATE_ON_APPEARANCE)) {
            mCheckBoxPreference.setSummary(sharedPreferences.getBoolean(key,
                    false) ? "Disable this setting" : "Enable this setting");
        } else if (key.equals(RssDashClockService.PREF_SYNC_FREQUENCY)) {
            mListPreference.setSummary("Current value is " + sharedPreferences.getValue(key, ""));
        }
    }
}
